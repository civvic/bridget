# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/bridget',
                'doc_host': 'https://civvic.github.io',
                'git_url': 'https://github.com/civvic/bridget',
                'lib_path': 'bridget'},
  'syms': { 'bridget.bridge': { 'bridget.bridge.BCanvas': ('bridge.html#bcanvas', 'bridget/bridge.py'),
                                'bridget.bridge.BLogger': ('bridge.html#blogger', 'bridget/bridge.py'),
                                'bridget.bridge.BLogger._setup_canvas': ('bridge.html#blogger._setup_canvas', 'bridget/bridge.py'),
                                'bridget.bridge.BLogger.close_canvas': ('bridge.html#blogger.close_canvas', 'bridget/bridge.py'),
                                'bridget.bridge.BLogger.msg': ('bridge.html#blogger.msg', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge': ('bridge.html#bridge', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.__getattr__': ('bridge.html#bridge.__getattr__', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.__init__': ('bridge.html#bridge.__init__', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge._msg_fwrdr': ('bridge.html#bridge._msg_fwrdr', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.add_plugins': ('bridge.html#bridge.add_plugins', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.get_prop': ('bridge.html#bridge.get_prop', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.loader': ('bridge.html#bridge.loader', 'bridget/bridge.py'),
                                'bridget.bridge.Bridge.on_info': ('bridge.html#bridge.on_info', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot': ('bridge.html#bridgeboot', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.__init__': ('bridge.html#bridgeboot.__init__', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot._message_hdlr': ('bridge.html#bridgeboot._message_hdlr', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot._on_loaded': ('bridge.html#bridgeboot._on_loaded', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.close': ('bridge.html#bridgeboot.close', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.error': ('bridge.html#bridgeboot.error', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.log': ('bridge.html#bridgeboot.log', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.update_logger_config': ( 'bridge.html#bridgeboot.update_logger_config',
                                                                                    'bridget/bridge.py'),
                                'bridget.bridge.BridgeBoot.warn': ('bridge.html#bridgeboot.warn', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger': ('bridge.html#bridgemessenger', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger.__init__': ('bridge.html#bridgemessenger.__init__', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger._message_hdlr': ( 'bridge.html#bridgemessenger._message_hdlr',
                                                                                  'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger._msg_fwrdr': ( 'bridge.html#bridgemessenger._msg_fwrdr',
                                                                               'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger.debug_enabled': ( 'bridge.html#bridgemessenger.debug_enabled',
                                                                                  'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger.msg': ('bridge.html#bridgemessenger.msg', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger.on_error': ('bridge.html#bridgemessenger.on_error', 'bridget/bridge.py'),
                                'bridget.bridge.BridgeMessenger.on_info': ('bridge.html#bridgemessenger.on_info', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin': ('bridge.html#bridgeplugin', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin.__init__': ('bridge.html#bridgeplugin.__init__', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin.error': ('bridge.html#bridgeplugin.error', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin.log': ('bridge.html#bridgeplugin.log', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin.on_init': ('bridge.html#bridgeplugin.on_init', 'bridget/bridge.py'),
                                'bridget.bridge.BridgePlugin.warn': ('bridge.html#bridgeplugin.warn', 'bridget/bridge.py'),
                                'bridget.bridge.HTMXPlugin': ('bridge.html#htmxplugin', 'bridget/bridge.py'),
                                'bridget.bridge.HTMXPlugin.on_info': ('bridge.html#htmxplugin.on_info', 'bridget/bridge.py'),
                                'bridget.bridge.HTMXPlugin.setup': ('bridge.html#htmxplugin.setup', 'bridget/bridge.py'),
                                'bridget.bridge.Links': ('bridge.html#links', 'bridget/bridge.py'),
                                'bridget.bridge.Loader': ('bridge.html#loader', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.__init__': ('bridge.html#loader.__init__', 'bridget/bridge.py'),
                                'bridget.bridge.Loader._asend': ('bridge.html#loader._asend', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.aload': ('bridge.html#loader.aload', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.aload_links': ('bridge.html#loader.aload_links', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.load': ('bridge.html#loader.load', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.load_links': ('bridge.html#loader.load_links', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.loaded': ('bridge.html#loader.loaded', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.loading': ('bridge.html#loader.loading', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.on_init': ('bridge.html#loader.on_init', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.on_load': ('bridge.html#loader.on_load', 'bridget/bridge.py'),
                                'bridget.bridge.Loader.on_loadLinks': ('bridge.html#loader.on_loadlinks', 'bridget/bridge.py'),
                                'bridget.bridge.ScriptsDetails': ('bridge.html#scriptsdetails', 'bridget/bridge.py'),
                                'bridget.bridge.ScriptsDetails.__ft__': ('bridge.html#scriptsdetails.__ft__', 'bridget/bridge.py'),
                                'bridget.bridge.ScriptsDetails.__init__': ('bridge.html#scriptsdetails.__init__', 'bridget/bridge.py'),
                                'bridget.bridge._bridge_scripts_extra': ('bridge.html#_bridge_scripts_extra', 'bridget/bridge.py'),
                                'bridget.bridge._get_bridge': ('bridge.html#_get_bridge', 'bridget/bridge.py'),
                                'bridget.bridge._safe': ('bridge.html#_safe', 'bridget/bridge.py'),
                                'bridget.bridge._set_bridge': ('bridge.html#_set_bridge', 'bridget/bridge.py'),
                                'bridget.bridge._to_js': ('bridge.html#_to_js', 'bridget/bridge.py'),
                                'bridget.bridge.brdimport': ('bridge.html#brdimport', 'bridget/bridge.py'),
                                'bridget.bridge.bridge_scripts': ('bridge.html#bridge_scripts', 'bridget/bridge.py'),
                                'bridget.bridge.debug': ('bridge.html#debug', 'bridget/bridge.py'),
                                'bridget.bridge.get_bcanvas': ('bridge.html#get_bcanvas', 'bridget/bridge.py'),
                                'bridget.bridge.get_bridge': ('bridge.html#get_bridge', 'bridget/bridge.py'),
                                'bridget.bridge.handle_message': ('bridge.html#handle_message', 'bridget/bridge.py'),
                                'bridget.bridge.load_links': ('bridge.html#load_links', 'bridget/bridge.py'),
                                'bridget.bridge.notdebug': ('bridge.html#notdebug', 'bridget/bridge.py'),
                                'bridget.bridge.show_scripts': ('bridge.html#show_scripts', 'bridget/bridge.py'),
                                'bridget.bridge.show_summary': ('bridge.html#show_summary', 'bridget/bridge.py'),
                                'bridget.bridge.to_js': ('bridge.html#to_js', 'bridget/bridge.py')},
            'bridget.bridge_plugins': { 'bridget.bridge_plugins.HTMXCommander': ( 'bridge_plugins.html#htmxcommander',
                                                                                  'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.HTMXCommander.swap': ( 'bridge_plugins.html#htmxcommander.swap',
                                                                                       'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.HTMXCommanderPlugin': ( 'bridge_plugins.html#htmxcommanderplugin',
                                                                                        'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.HTMXCommanderPlugin.on_inspect': ( 'bridge_plugins.html#htmxcommanderplugin.on_inspect',
                                                                                                   'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.HTMXCommanderPlugin.swap': ( 'bridge_plugins.html#htmxcommanderplugin.swap',
                                                                                             'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.NBHooksPlugin': ( 'bridge_plugins.html#nbhooksplugin',
                                                                                  'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.NBHooksPlugin.__init__': ( 'bridge_plugins.html#nbhooksplugin.__init__',
                                                                                           'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.NBHooksPlugin.dh': ( 'bridge_plugins.html#nbhooksplugin.dh',
                                                                                     'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.NBHooksPlugin.on_init': ( 'bridge_plugins.html#nbhooksplugin.on_init',
                                                                                          'bridget/bridge_plugins.py'),
                                        'bridget.bridge_plugins.swap': ('bridge_plugins.html#swap', 'bridget/bridge_plugins.py')},
            'bridget.bridge_widget': { 'bridget.bridge_widget.BlockingMixin': ( 'bridge_widget.html#blockingmixin',
                                                                                'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin._asend_msg': ( 'bridge_widget.html#blockingmixin._asend_msg',
                                                                                           'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin._send_msg': ( 'bridge_widget.html#blockingmixin._send_msg',
                                                                                          'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.acreate': ( 'bridge_widget.html#blockingmixin.acreate',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.asend': ( 'bridge_widget.html#blockingmixin.asend',
                                                                                      'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.create': ( 'bridge_widget.html#blockingmixin.create',
                                                                                       'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.loaded': ( 'bridge_widget.html#blockingmixin.loaded',
                                                                                       'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.send': ( 'bridge_widget.html#blockingmixin.send',
                                                                                     'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BlockingMixin.setup_init_on_msg': ( 'bridge_widget.html#blockingmixin.setup_init_on_msg',
                                                                                                  'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeImport': ( 'bridge_widget.html#bridgeimport',
                                                                               'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeImport.__init__': ( 'bridge_widget.html#bridgeimport.__init__',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeImport._on_loaded': ( 'bridge_widget.html#bridgeimport._on_loaded',
                                                                                          'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeImport.get_module': ( 'bridge_widget.html#bridgeimport.get_module',
                                                                                          'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeWidget': ( 'bridge_widget.html#bridgewidget',
                                                                               'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.BridgeWidget.__init__': ( 'bridge_widget.html#bridgewidget.__init__',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle': ('bridge_widget.html#bundle', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.__call__': ( 'bridge_widget.html#bundle.__call__',
                                                                                  'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.__init__': ( 'bridge_widget.html#bundle.__init__',
                                                                                  'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.__str__': ( 'bridge_widget.html#bundle.__str__',
                                                                                 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.bundle_path_of': ( 'bridge_widget.html#bundle.bundle_path_of',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.bundled_sources': ( 'bridge_widget.html#bundle.bundled_sources',
                                                                                         'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.default_outdir': ( 'bridge_widget.html#bundle.default_outdir',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.join': ('bridge_widget.html#bundle.join', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.source': ( 'bridge_widget.html#bundle.source',
                                                                                'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.Bundle.transform': ( 'bridge_widget.html#bundle.transform',
                                                                                   'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.ScriptV': ('bridge_widget.html#scriptv', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.SourceProvider': ( 'bridge_widget.html#sourceprovider',
                                                                                 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.SourceProvider.source': ( 'bridge_widget.html#sourceprovider.source',
                                                                                        'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.StyleV': ('bridge_widget.html#stylev', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget._get_brdimport': ( 'bridge_widget.html#_get_brdimport',
                                                                                 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget._resolve_local': ( 'bridge_widget.html#_resolve_local',
                                                                                 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget._set_brdimport': ( 'bridge_widget.html#_set_brdimport',
                                                                                 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget._show': ('bridge_widget.html#_show', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget._source': ('bridge_widget.html#_source', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.ablocks': ('bridge_widget.html#ablocks', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.anysource': ('bridge_widget.html#anysource', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.blocking': ('bridge_widget.html#blocking', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.blocks': ('bridge_widget.html#blocks', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.bundled': ('bridge_widget.html#bundled', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.exp_backoff': ('bridge_widget.html#exp_backoff', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.get_ESM': ('bridge_widget.html#get_esm', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.get_brdimport': ( 'bridge_widget.html#get_brdimport',
                                                                                'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.read_vfile': ('bridge_widget.html#read_vfile', 'bridget/bridge_widget.py'),
                                       'bridget.bridge_widget.resolve_ESM': ('bridge_widget.html#resolve_esm', 'bridget/bridge_widget.py')},
            'bridget.bridget': { 'bridget.bridget.Bridget': ('bridget.html#bridget', 'bridget/bridget.py'),
                                 'bridget.bridget.Bridget.__init__': ('bridget.html#bridget.__init__', 'bridget/bridget.py'),
                                 'bridget.bridget.Bridget._show_req': ('bridget.html#bridget._show_req', 'bridget/bridget.py'),
                                 'bridget.bridget.Bridget.on_request': ('bridget.html#bridget.on_request', 'bridget/bridget.py'),
                                 'bridget.bridget.BridgetClient': ('bridget.html#bridgetclient', 'bridget/bridget.py'),
                                 'bridget.bridget.BridgetClient.__call__': ('bridget.html#bridgetclient.__call__', 'bridget/bridget.py'),
                                 'bridget.bridget.BridgetClient._response': ('bridget.html#bridgetclient._response', 'bridget/bridget.py'),
                                 'bridget.bridget.BridgetClient.mount': ('bridget.html#bridgetclient.mount', 'bridget/bridget.py'),
                                 'bridget.bridget.BridgetClient.setup': ('bridget.html#bridgetclient.setup', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP': ('bridget.html#clientp', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.delete': ('bridget.html#clientp.delete', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.get': ('bridget.html#clientp.get', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.options': ('bridget.html#clientp.options', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.patch': ('bridget.html#clientp.patch', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.post': ('bridget.html#clientp.post', 'bridget/bridget.py'),
                                 'bridget.bridget.ClientP.put': ('bridget.html#clientp.put', 'bridget/bridget.py'),
                                 'bridget.bridget.HasFT': ('bridget.html#hasft', 'bridget/bridget.py'),
                                 'bridget.bridget.HasFT.__ft__': ('bridget.html#hasft.__ft__', 'bridget/bridget.py'),
                                 'bridget.bridget.HasHTML': ('bridget.html#hashtml', 'bridget/bridget.py'),
                                 'bridget.bridget.HasHTML.__html__': ('bridget.html#hashtml.__html__', 'bridget/bridget.py'),
                                 'bridget.bridget.get_app': ('bridget.html#get_app', 'bridget/bridget.py'),
                                 'bridget.bridget.get_bridget': ('bridget.html#get_bridget', 'bridget/bridget.py'),
                                 'bridget.bridget.httpx_response_to_json': ('bridget.html#httpx_response_to_json', 'bridget/bridget.py'),
                                 'bridget.bridget.request2httpx_request': ('bridget.html#request2httpx_request', 'bridget/bridget.py'),
                                 'bridget.bridget.request2response': ('bridget.html#request2response', 'bridget/bridget.py')},
            'bridget.common': {},
            'bridget.components.details_json': { 'bridget.components.details_json.DetailsJSON': ( 'details_json.html#detailsjson',
                                                                                                  'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.DetailsJSON.__call__': ( 'details_json.html#detailsjson.__call__',
                                                                                                           'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.DetailsJSON.__ft__': ( 'details_json.html#detailsjson.__ft__',
                                                                                                         'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.DetailsJSON.__init__': ( 'details_json.html#detailsjson.__init__',
                                                                                                           'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.DetailsJSON._ipython_display_': ( 'details_json.html#detailsjson._ipython_display_',
                                                                                                                    'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.NameVal': ( 'details_json.html#nameval',
                                                                                              'bridget/components/details_json.py'),
                                                 'bridget.components.details_json.Val': ( 'details_json.html#val',
                                                                                          'bridget/components/details_json.py')},
            'bridget.fasthtml_patching': { 'bridget.fasthtml_patching.JupyUviB': ( 'fasthtml_patching.html#jupyuvib',
                                                                                   'bridget/fasthtml_patching.py'),
                                           'bridget.fasthtml_patching.JupyUviB.__init__': ( 'fasthtml_patching.html#jupyuvib.__init__',
                                                                                            'bridget/fasthtml_patching.py'),
                                           'bridget.fasthtml_patching._repr_mimebundle_': ( 'fasthtml_patching.html#_repr_mimebundle_',
                                                                                            'bridget/fasthtml_patching.py'),
                                           'bridget.fasthtml_patching.htmx_config_port': ( 'fasthtml_patching.html#htmx_config_port',
                                                                                           'bridget/fasthtml_patching.py'),
                                           'bridget.fasthtml_patching.render_ft': ( 'fasthtml_patching.html#render_ft',
                                                                                    'bridget/fasthtml_patching.py')},
            'bridget.helpers': { 'bridget.helpers.BridgeCfg': ('helpers.html#bridgecfg', 'bridget/helpers.py'),
                                 'bridget.helpers.BridgeCfg.for_module': ('helpers.html#bridgecfg.for_module', 'bridget/helpers.py'),
                                 'bridget.helpers.BundleCfg': ('helpers.html#bundlecfg', 'bridget/helpers.py'),
                                 'bridget.helpers.CLog': ('helpers.html#clog', 'bridget/helpers.py'),
                                 'bridget.helpers.DEBUG': ('helpers.html#debug', 'bridget/helpers.py'),
                                 'bridget.helpers.DetailsJSON': ('helpers.html#detailsjson', 'bridget/helpers.py'),
                                 'bridget.helpers.DetailsJSON.__ft__': ('helpers.html#detailsjson.__ft__', 'bridget/helpers.py'),
                                 'bridget.helpers.DetailsJSON.__init__': ('helpers.html#detailsjson.__init__', 'bridget/helpers.py'),
                                 'bridget.helpers.HTML': ('helpers.html#html', 'bridget/helpers.py'),
                                 'bridget.helpers.HTML.__init__': ('helpers.html#html.__init__', 'bridget/helpers.py'),
                                 'bridget.helpers.Kounter': ('helpers.html#kounter', 'bridget/helpers.py'),
                                 'bridget.helpers.Kounter.__call__': ('helpers.html#kounter.__call__', 'bridget/helpers.py'),
                                 'bridget.helpers.Kounter.__init__': ('helpers.html#kounter.__init__', 'bridget/helpers.py'),
                                 'bridget.helpers.NameVal': ('helpers.html#nameval', 'bridget/helpers.py'),
                                 'bridget.helpers.Val': ('helpers.html#val', 'bridget/helpers.py'),
                                 'bridget.helpers.arun_command': ('helpers.html#arun_command', 'bridget/helpers.py'),
                                 'bridget.helpers.bridge_metadata': ('helpers.html#bridge_metadata', 'bridget/helpers.py'),
                                 'bridget.helpers.cached_property': ('helpers.html#cached_property', 'bridget/helpers.py'),
                                 'bridget.helpers.cached_property.__init__': ( 'helpers.html#cached_property.__init__',
                                                                               'bridget/helpers.py'),
                                 'bridget.helpers.cleanupbridget': ('helpers.html#cleanupbridget', 'bridget/helpers.py'),
                                 'bridget.helpers.compose_first': ('helpers.html#compose_first', 'bridget/helpers.py'),
                                 'bridget.helpers.display': ('helpers.html#display', 'bridget/helpers.py'),
                                 'bridget.helpers.displaydh': ('helpers.html#displaydh', 'bridget/helpers.py'),
                                 'bridget.helpers.find_active_widgets': ('helpers.html#find_active_widgets', 'bridget/helpers.py'),
                                 'bridget.helpers.get_active_widgets_comms': ( 'helpers.html#get_active_widgets_comms',
                                                                               'bridget/helpers.py'),
                                 'bridget.helpers.get_kernel_widgets_comms': ( 'helpers.html#get_kernel_widgets_comms',
                                                                               'bridget/helpers.py'),
                                 'bridget.helpers.id_gen': ('helpers.html#id_gen', 'bridget/helpers.py'),
                                 'bridget.helpers.in_vscode': ('helpers.html#in_vscode', 'bridget/helpers.py'),
                                 'bridget.helpers.in_vscode_notebook': ('helpers.html#in_vscode_notebook', 'bridget/helpers.py'),
                                 'bridget.helpers.ms2str': ('helpers.html#ms2str', 'bridget/helpers.py'),
                                 'bridget.helpers.nb_app': ('helpers.html#nb_app', 'bridget/helpers.py'),
                                 'bridget.helpers.patch_cached': ('helpers.html#patch_cached', 'bridget/helpers.py'),
                                 'bridget.helpers.patch_cached_property': ('helpers.html#patch_cached_property', 'bridget/helpers.py'),
                                 'bridget.helpers.run_command': ('helpers.html#run_command', 'bridget/helpers.py'),
                                 'bridget.helpers.simple_id': ('helpers.html#simple_id', 'bridget/helpers.py'),
                                 'bridget.helpers.skip': ('helpers.html#skip', 'bridget/helpers.py'),
                                 'bridget.helpers.ts': ('helpers.html#ts', 'bridget/helpers.py')},
            'bridget.js_transform': { 'bridget.js_transform.JSImportTransform': ( 'jstransform.html#jsimporttransform',
                                                                                  'bridget/js_transform.py'),
                                      'bridget.js_transform.JSImportTransform.__call__': ( 'jstransform.html#jsimporttransform.__call__',
                                                                                           'bridget/js_transform.py'),
                                      'bridget.js_transform.JSImportTransform.__init__': ( 'jstransform.html#jsimporttransform.__init__',
                                                                                           'bridget/js_transform.py'),
                                      'bridget.js_transform.JSImportTransform._transform': ( 'jstransform.html#jsimporttransform._transform',
                                                                                             'bridget/js_transform.py'),
                                      'bridget.js_transform.JSImportTransform._transform_dynamic': ( 'jstransform.html#jsimporttransform._transform_dynamic',
                                                                                                     'bridget/js_transform.py'),
                                      'bridget.js_transform.JSImportTransform._transform_static': ( 'jstransform.html#jsimporttransform._transform_static',
                                                                                                    'bridget/js_transform.py'),
                                      'bridget.js_transform._extract_comments': ( 'jstransform.html#_extract_comments',
                                                                                  'bridget/js_transform.py'),
                                      'bridget.js_transform._find_all_imports': ( 'jstransform.html#_find_all_imports',
                                                                                  'bridget/js_transform.py'),
                                      'bridget.js_transform._generate_dynamic_import': ( 'jstransform.html#_generate_dynamic_import',
                                                                                         'bridget/js_transform.py'),
                                      'bridget.js_transform._import_specifiers': ( 'jstransform.html#_import_specifiers',
                                                                                   'bridget/js_transform.py'),
                                      'bridget.js_transform._parse_import_statement': ( 'jstransform.html#_parse_import_statement',
                                                                                        'bridget/js_transform.py'),
                                      'bridget.js_transform._replace': ('jstransform.html#_replace', 'bridget/js_transform.py'),
                                      'bridget.js_transform._should_ignore_import': ( 'jstransform.html#_should_ignore_import',
                                                                                      'bridget/js_transform.py'),
                                      'bridget.js_transform._string_content': ( 'jstransform.html#_string_content',
                                                                                'bridget/js_transform.py'),
                                      'bridget.js_transform._validate_import_statement': ( 'jstransform.html#_validate_import_statement',
                                                                                           'bridget/js_transform.py')},
            'bridget.logger': { 'bridget.logger.BasicLogger': ('logger.html#basiclogger', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.__init__': ('logger.html#basiclogger.__init__', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger._format': ('logger.html#basiclogger._format', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger._setup_canvas': ('logger.html#basiclogger._setup_canvas', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.active': ('logger.html#basiclogger.active', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.canvas': ('logger.html#basiclogger.canvas', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.clear_log': ('logger.html#basiclogger.clear_log', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.close_canvas': ('logger.html#basiclogger.close_canvas', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.history': ('logger.html#basiclogger.history', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.msg': ('logger.html#basiclogger.msg', 'bridget/logger.py'),
                                'bridget.logger.BasicLogger.show': ('logger.html#basiclogger.show', 'bridget/logger.py'),
                                'bridget.logger.Canvas': ('logger.html#canvas', 'bridget/logger.py'),
                                'bridget.logger.Canvas.add': ('logger.html#canvas.add', 'bridget/logger.py'),
                                'bridget.logger.Canvas.clear': ('logger.html#canvas.clear', 'bridget/logger.py'),
                                'bridget.logger.Canvas.hide': ('logger.html#canvas.hide', 'bridget/logger.py'),
                                'bridget.logger.Canvas.show': ('logger.html#canvas.show', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas': ('logger.html#dhcanvas', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.__init__': ('logger.html#dhcanvas.__init__', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.add': ('logger.html#dhcanvas.add', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.clear': ('logger.html#dhcanvas.clear', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.dh': ('logger.html#dhcanvas.dh', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.hide': ('logger.html#dhcanvas.hide', 'bridget/logger.py'),
                                'bridget.logger.DhCanvas.show': ('logger.html#dhcanvas.show', 'bridget/logger.py'),
                                'bridget.logger.FCanvas': ('logger.html#fcanvas', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.__init__': ('logger.html#fcanvas.__init__', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.add': ('logger.html#fcanvas.add', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.clear': ('logger.html#fcanvas.clear', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.close': ('logger.html#fcanvas.close', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.displayed': ('logger.html#fcanvas.displayed', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.hide': ('logger.html#fcanvas.hide', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.new_elid': ('logger.html#fcanvas.new_elid', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.show': ('logger.html#fcanvas.show', 'bridget/logger.py'),
                                'bridget.logger.FCanvas.tmpl': ('logger.html#fcanvas.tmpl', 'bridget/logger.py'),
                                'bridget.logger.FLogger': ('logger.html#flogger', 'bridget/logger.py'),
                                'bridget.logger.FLogger._setup_canvas': ('logger.html#flogger._setup_canvas', 'bridget/logger.py'),
                                'bridget.logger.NBLogger': ('logger.html#nblogger', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.__init_subclass__': ( 'logger.html#nblogger.__init_subclass__',
                                                                               'bridget/logger.py'),
                                'bridget.logger.NBLogger.active': ('logger.html#nblogger.active', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.canvas': ('logger.html#nblogger.canvas', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.clear_log': ('logger.html#nblogger.clear_log', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.close_canvas': ('logger.html#nblogger.close_canvas', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.msg': ('logger.html#nblogger.msg', 'bridget/logger.py'),
                                'bridget.logger.NBLogger.show': ('logger.html#nblogger.show', 'bridget/logger.py'),
                                'bridget.logger.NoopLogger': ('logger.html#nooplogger', 'bridget/logger.py'),
                                'bridget.logger.NoopLogger.__getattr__': ('logger.html#nooplogger.__getattr__', 'bridget/logger.py'),
                                'bridget.logger.setup_loguru_sink': ('logger.html#setup_loguru_sink', 'bridget/logger.py')},
            'bridget.nb': { 'bridget.nb.IpynbCell': ('nb.html#ipynbcell', 'bridget/nb.py'),
                            'bridget.nb.IpynbConvertCB': ('nb.html#ipynbconvertcb', 'bridget/nb.py'),
                            'bridget.nb.IpynbConvertCB.__init__': ('nb.html#ipynbconvertcb.__init__', 'bridget/nb.py'),
                            'bridget.nb.IpynbConvertCB.before_iter': ('nb.html#ipynbconvertcb.before_iter', 'bridget/nb.py'),
                            'bridget.nb.IpynbConvertCB.on_iter': ('nb.html#ipynbconvertcb.on_iter', 'bridget/nb.py'),
                            'bridget.nb.IpynbOutput': ('nb.html#ipynboutput', 'bridget/nb.py'),
                            'bridget.nb.NB': ('nb.html#nb', 'bridget/nb.py'),
                            'bridget.nb.NB.__getitem__': ('nb.html#nb.__getitem__', 'bridget/nb.py'),
                            'bridget.nb.NB.__init__': ('nb.html#nb.__init__', 'bridget/nb.py'),
                            'bridget.nb.NB.__iter__': ('nb.html#nb.__iter__', 'bridget/nb.py'),
                            'bridget.nb.NB._apply_diff': ('nb.html#nb._apply_diff', 'bridget/nb.py'),
                            'bridget.nb.NB._indxs': ('nb.html#nb._indxs', 'bridget/nb.py'),
                            'bridget.nb.NB._process': ('nb.html#nb._process', 'bridget/nb.py'),
                            'bridget.nb.NB._rebuild': ('nb.html#nb._rebuild', 'bridget/nb.py'),
                            'bridget.nb.NB.apply_diffsMessage': ('nb.html#nb.apply_diffsmessage', 'bridget/nb.py'),
                            'bridget.nb.NB.as_dict': ('nb.html#nb.as_dict', 'bridget/nb.py'),
                            'bridget.nb.NB.by_directive': ('nb.html#nb.by_directive', 'bridget/nb.py'),
                            'bridget.nb.NB.by_type': ('nb.html#nb.by_type', 'bridget/nb.py'),
                            'bridget.nb.NB.cell_by_did': ('nb.html#nb.cell_by_did', 'bridget/nb.py'),
                            'bridget.nb.NB.codes': ('nb.html#nb.codes', 'bridget/nb.py'),
                            'bridget.nb.NB.find': ('nb.html#nb.find', 'bridget/nb.py'),
                            'bridget.nb.NB.found': ('nb.html#nb.found', 'bridget/nb.py'),
                            'bridget.nb.NB.fromStateMessage': ('nb.html#nb.fromstatemessage', 'bridget/nb.py'),
                            'bridget.nb.NB.from_NB': ('nb.html#nb.from_nb', 'bridget/nb.py'),
                            'bridget.nb.NB.hiddens': ('nb.html#nb.hiddens', 'bridget/nb.py'),
                            'bridget.nb.NB.idx2cell': ('nb.html#nb.idx2cell', 'bridget/nb.py'),
                            'bridget.nb.NB.idx2code': ('nb.html#nb.idx2code', 'bridget/nb.py'),
                            'bridget.nb.NB.idx2dids': ('nb.html#nb.idx2dids', 'bridget/nb.py'),
                            'bridget.nb.NB.idx2md': ('nb.html#nb.idx2md', 'bridget/nb.py'),
                            'bridget.nb.NB.idx2outputs': ('nb.html#nb.idx2outputs', 'bridget/nb.py'),
                            'bridget.nb.NB.mds': ('nb.html#nb.mds', 'bridget/nb.py'),
                            'bridget.nb.NB.metadata': ('nb.html#nb.metadata', 'bridget/nb.py'),
                            'bridget.nb.NB.outputs': ('nb.html#nb.outputs', 'bridget/nb.py'),
                            'bridget.nb.NB.pipe': ('nb.html#nb.pipe', 'bridget/nb.py'),
                            'bridget.nb.NB.process': ('nb.html#nb.process', 'bridget/nb.py'),
                            'bridget.nb.NB.select': ('nb.html#nb.select', 'bridget/nb.py'),
                            'bridget.nb.NB.setup': ('nb.html#nb.setup', 'bridget/nb.py'),
                            'bridget.nb.NB.source': ('nb.html#nb.source', 'bridget/nb.py'),
                            'bridget.nb.NB.withOutputs': ('nb.html#nb.withoutputs', 'bridget/nb.py'),
                            'bridget.nb.NBCell': ('nb.html#nbcell', 'bridget/nb.py'),
                            'bridget.nb.NBCell.__ft__': ('nb.html#nbcell.__ft__', 'bridget/nb.py'),
                            'bridget.nb.NBCell.__init__': ('nb.html#nbcell.__init__', 'bridget/nb.py'),
                            'bridget.nb.NBCell.__new__': ('nb.html#nbcell.__new__', 'bridget/nb.py'),
                            'bridget.nb.NBCell._repr_html_': ('nb.html#nbcell._repr_html_', 'bridget/nb.py'),
                            'bridget.nb.NBCell._repr_markdown_': ('nb.html#nbcell._repr_markdown_', 'bridget/nb.py'),
                            'bridget.nb.NBCell.copy': ('nb.html#nbcell.copy', 'bridget/nb.py'),
                            'bridget.nb.NBCell.directives_': ('nb.html#nbcell.directives_', 'bridget/nb.py'),
                            'bridget.nb.NBCell.has_directive': ('nb.html#nbcell.has_directive', 'bridget/nb.py'),
                            'bridget.nb.NBCell.hidden': ('nb.html#nbcell.hidden', 'bridget/nb.py'),
                            'bridget.nb.NBCellCode': ('nb.html#nbcellcode', 'bridget/nb.py'),
                            'bridget.nb.NBCellCode.__init__': ('nb.html#nbcellcode.__init__', 'bridget/nb.py'),
                            'bridget.nb.NBCellMarkdown': ('nb.html#nbcellmarkdown', 'bridget/nb.py'),
                            'bridget.nb.NBCellRaw': ('nb.html#nbcellraw', 'bridget/nb.py'),
                            'bridget.nb.NBOutput': ('nb.html#nboutput', 'bridget/nb.py'),
                            'bridget.nb.NBOutput.__init__': ('nb.html#nboutput.__init__', 'bridget/nb.py'),
                            'bridget.nb.NBOutput.__new__': ('nb.html#nboutput.__new__', 'bridget/nb.py'),
                            'bridget.nb.NBOutputDisplayData': ('nb.html#nboutputdisplaydata', 'bridget/nb.py'),
                            'bridget.nb.NBOutputError': ('nb.html#nboutputerror', 'bridget/nb.py'),
                            'bridget.nb.NBOutputExecuteResult': ('nb.html#nboutputexecuteresult', 'bridget/nb.py'),
                            'bridget.nb.NBOutputStream': ('nb.html#nboutputstream', 'bridget/nb.py'),
                            'bridget.nb.NBProcessor': ('nb.html#nbprocessor', 'bridget/nb.py'),
                            'bridget.nb.NBProcessor.__call__': ('nb.html#nbprocessor.__call__', 'bridget/nb.py'),
                            'bridget.nb.NBProvider': ('nb.html#nbprovider', 'bridget/nb.py'),
                            'bridget.nb.NBProvider.nb': ('nb.html#nbprovider.nb', 'bridget/nb.py'),
                            'bridget.nb.St2Ipynb': ('nb.html#st2ipynb', 'bridget/nb.py'),
                            'bridget.nb.St2Ipynb.__init__': ('nb.html#st2ipynb.__init__', 'bridget/nb.py'),
                            'bridget.nb.St2Ipynb.decodes': ('nb.html#st2ipynb.decodes', 'bridget/nb.py'),
                            'bridget.nb.St2Ipynb.encodes': ('nb.html#st2ipynb.encodes', 'bridget/nb.py'),
                            'bridget.nb._apply_diff': ('nb.html#_apply_diff', 'bridget/nb.py'),
                            'bridget.nb._relevant_kw': ('nb.html#_relevant_kw', 'bridget/nb.py'),
                            'bridget.nb._there': ('nb.html#_there', 'bridget/nb.py'),
                            'bridget.nb.apply_diffsMessage': ('nb.html#apply_diffsmessage', 'bridget/nb.py'),
                            'bridget.nb.by_directive': ('nb.html#by_directive', 'bridget/nb.py'),
                            'bridget.nb.by_type': ('nb.html#by_type', 'bridget/nb.py'),
                            'bridget.nb.did': ('nb.html#did', 'bridget/nb.py'),
                            'bridget.nb.dids': ('nb.html#dids', 'bridget/nb.py'),
                            'bridget.nb.find': ('nb.html#find', 'bridget/nb.py'),
                            'bridget.nb.found': ('nb.html#found', 'bridget/nb.py'),
                            'bridget.nb.has_directive': ('nb.html#has_directive', 'bridget/nb.py'),
                            'bridget.nb.idx2cell': ('nb.html#idx2cell', 'bridget/nb.py'),
                            'bridget.nb.idx2dids': ('nb.html#idx2dids', 'bridget/nb.py'),
                            'bridget.nb.idx2outputs': ('nb.html#idx2outputs', 'bridget/nb.py'),
                            'bridget.nb.withOutputs': ('nb.html#withoutputs', 'bridget/nb.py')},
            'bridget.nb_hooks': { 'bridget.nb_hooks.Bridged': ('nb_hooks.html#bridged', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.__del__': ('nb_hooks.html#bridged.__del__', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.__init__': ('nb_hooks.html#bridged.__init__', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged._reset': ('nb_hooks.html#bridged._reset', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.active': ('nb_hooks.html#bridged.active', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.bridged': ('nb_hooks.html#bridged.bridged', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.dh': ('nb_hooks.html#bridged.dh', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.start': ('nb_hooks.html#bridged.start', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.Bridged.stop': ('nb_hooks.html#bridged.stop', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer': ('nb_hooks.html#capturetransformer', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.__del__': ( 'nb_hooks.html#capturetransformer.__del__',
                                                                                   'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.__init__': ( 'nb_hooks.html#capturetransformer.__init__',
                                                                                    'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer._should_reject_input': ( 'nb_hooks.html#capturetransformer._should_reject_input',
                                                                                                'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer._transform_expr_conditional': ( 'nb_hooks.html#capturetransformer._transform_expr_conditional',
                                                                                                       'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer._transform_expr_direct': ( 'nb_hooks.html#capturetransformer._transform_expr_direct',
                                                                                                  'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.active': ( 'nb_hooks.html#capturetransformer.active',
                                                                                  'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.start': ( 'nb_hooks.html#capturetransformer.start',
                                                                                 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.stop': ( 'nb_hooks.html#capturetransformer.stop',
                                                                                'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CaptureTransformer.visit_Module': ( 'nb_hooks.html#capturetransformer.visit_module',
                                                                                        'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo': ('nb_hooks.html#cellexecinfo', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.__del__': ('nb_hooks.html#cellexecinfo.__del__', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.__init__': ('nb_hooks.html#cellexecinfo.__init__', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo._getid': ('nb_hooks.html#cellexecinfo._getid', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.active': ('nb_hooks.html#cellexecinfo.active', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.post_run_cell': ( 'nb_hooks.html#cellexecinfo.post_run_cell',
                                                                                   'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.pre_run_cell': ( 'nb_hooks.html#cellexecinfo.pre_run_cell',
                                                                                  'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.start': ('nb_hooks.html#cellexecinfo.start', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.CellExecInfo.stop': ('nb_hooks.html#cellexecinfo.stop', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks._ast_process_result': ('nb_hooks.html#_ast_process_result', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks._cellid_from': ('nb_hooks.html#_cellid_from', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks._get_outputs': ('nb_hooks.html#_get_outputs', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks._nburi_from': ('nb_hooks.html#_nburi_from', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks._update_cell': ('nb_hooks.html#_update_cell', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.cellspec_from': ('nb_hooks.html#cellspec_from', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_bridged': ('nb_hooks.html#get_bridged', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_capturer': ('nb_hooks.html#get_capturer', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_csi': ('nb_hooks.html#get_csi', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_info': ('nb_hooks.html#get_info', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_lastinfo': ('nb_hooks.html#get_lastinfo', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.get_nb_from_hooks': ('nb_hooks.html#get_nb_from_hooks', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.stop_hooks': ('nb_hooks.html#stop_hooks', 'bridget/nb_hooks.py'),
                                  'bridget.nb_hooks.update': ('nb_hooks.html#update', 'bridget/nb_hooks.py')},
            'bridget.nb_state': { 'bridget.nb_state.NBState': ('nb_state.html#nbstate', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBState.__getitem__': ('nb_state.html#nbstate.__getitem__', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBState.__init__': ('nb_state.html#nbstate.__init__', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBState.state': ('nb_state.html#nbstate.state', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBState.this': ('nb_state.html#nbstate.this', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher': ('nb_state.html#nbstatefetcher', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.__init__': ( 'nb_state.html#nbstatefetcher.__init__',
                                                                                'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.aupdate': ( 'nb_state.html#nbstatefetcher.aupdate',
                                                                               'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.on_init': ( 'nb_state.html#nbstatefetcher.on_init',
                                                                               'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.on_state_update': ( 'nb_state.html#nbstatefetcher.on_state_update',
                                                                                       'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.opts': ('nb_state.html#nbstatefetcher.opts', 'bridget/nb_state.py'),
                                  'bridget.nb_state.NBStateFetcher.update': ('nb_state.html#nbstatefetcher.update', 'bridget/nb_state.py'),
                                  'bridget.nb_state.StateProvider': ('nb_state.html#stateprovider', 'bridget/nb_state.py'),
                                  'bridget.nb_state.StateProvider.state': ('nb_state.html#stateprovider.state', 'bridget/nb_state.py'),
                                  'bridget.nb_state._NBStateFeedback': ('nb_state.html#_nbstatefeedback', 'bridget/nb_state.py'),
                                  'bridget.nb_state._NBStateFeedback.__init__': ( 'nb_state.html#_nbstatefeedback.__init__',
                                                                                  'bridget/nb_state.py'),
                                  'bridget.nb_state._NBStateFeedback.hide': ('nb_state.html#_nbstatefeedback.hide', 'bridget/nb_state.py'),
                                  'bridget.nb_state._NBStateFeedback.show': ('nb_state.html#_nbstatefeedback.show', 'bridget/nb_state.py'),
                                  'bridget.nb_state._NBStateFeedback.update': ( 'nb_state.html#_nbstatefeedback.update',
                                                                                'bridget/nb_state.py'),
                                  'bridget.nb_state.get_nb': ('nb_state.html#get_nb', 'bridget/nb_state.py'),
                                  'bridget.nb_state.this': ('nb_state.html#this', 'bridget/nb_state.py')},
            'bridget.nbdev_rt': {},
            'bridget.routing': { 'bridget.routing.APIRoute': ('route_provider.html#apiroute', 'bridget/routing.py'),
                                 'bridget.routing.APIRoute.__call__': ('route_provider.html#apiroute.__call__', 'bridget/routing.py'),
                                 'bridget.routing.APIRoute.__getattr__': ('route_provider.html#apiroute.__getattr__', 'bridget/routing.py'),
                                 'bridget.routing.APIRoute.__init__': ('route_provider.html#apiroute.__init__', 'bridget/routing.py'),
                                 'bridget.routing.APIRoute.__set_name__': ( 'route_provider.html#apiroute.__set_name__',
                                                                            'bridget/routing.py'),
                                 'bridget.routing.APIRouterC': ('route_provider.html#apirouterc', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterC._wrap_func': ( 'route_provider.html#apirouterc._wrap_func',
                                                                            'bridget/routing.py'),
                                 'bridget.routing.APIRouterC.name': ('route_provider.html#apirouterc.name', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterC.to': ('route_provider.html#apirouterc.to', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterC.to_app': ('route_provider.html#apirouterc.to_app', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD': ('route_provider.html#apirouterd', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.__call__': ('route_provider.html#apirouterd.__call__', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.__get__': ('route_provider.html#apirouterd.__get__', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.__init__': ('route_provider.html#apirouterd.__init__', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.__set_name__': ( 'route_provider.html#apirouterd.__set_name__',
                                                                              'bridget/routing.py'),
                                 'bridget.routing.APIRouterD._rts': ('route_provider.html#apirouterd._rts', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.name': ('route_provider.html#apirouterd.name', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.to': ('route_provider.html#apirouterd.to', 'bridget/routing.py'),
                                 'bridget.routing.APIRouterD.to_app': ('route_provider.html#apirouterd.to_app', 'bridget/routing.py'),
                                 'bridget.routing.MountPoint': ('route_provider.html#mountpoint', 'bridget/routing.py'),
                                 'bridget.routing.MountPoint.mount': ('route_provider.html#mountpoint.mount', 'bridget/routing.py'),
                                 'bridget.routing.RouteProvider': ('route_provider.html#routeprovider', 'bridget/routing.py'),
                                 'bridget.routing.RouteProviderP': ('route_provider.html#routeproviderp', 'bridget/routing.py'),
                                 'bridget.routing._APIRouterD': ('route_provider.html#_apirouterd', 'bridget/routing.py'),
                                 'bridget.routing._APIRouterD.__get__': ('route_provider.html#_apirouterd.__get__', 'bridget/routing.py'),
                                 'bridget.routing._APIRouterD.__set_name__': ( 'route_provider.html#_apirouterd.__set_name__',
                                                                               'bridget/routing.py'),
                                 'bridget.routing._ar': ('route_provider.html#_ar', 'bridget/routing.py'),
                                 'bridget.routing._bound': ('route_provider.html#_bound', 'bridget/routing.py'),
                                 'bridget.routing._fn': ('route_provider.html#_fn', 'bridget/routing.py'),
                                 'bridget.routing._gather_routes': ('route_provider.html#_gather_routes', 'bridget/routing.py'),
                                 'bridget.routing._patched': ('route_provider.html#_patched', 'bridget/routing.py'),
                                 'bridget.routing._path': ('route_provider.html#_path', 'bridget/routing.py'),
                                 'bridget.routing._reg_mth': ('route_provider.html#_reg_mth', 'bridget/routing.py'),
                                 'bridget.routing._replace': ('route_provider.html#_replace', 'bridget/routing.py'),
                                 'bridget.routing._unravel_prop': ('route_provider.html#_unravel_prop', 'bridget/routing.py'),
                                 'bridget.routing.add_routes': ('route_provider.html#add_routes', 'bridget/routing.py'),
                                 'bridget.routing.mount': ('route_provider.html#mount', 'bridget/routing.py'),
                                 'bridget.routing.nested_name': ('route_provider.html#nested_name', 'bridget/routing.py')},
            'bridget.widget': {}}}
